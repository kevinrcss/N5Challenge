// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using N5Challenge.Infrastructure.Data;

#nullable disable

namespace N5Challenge.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240812210255_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("N5Challenge.Core.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("date");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeLastName = "Doe",
                            EmployeeName = "John",
                            PermissionDate = new DateTime(2024, 8, 7, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3829),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeLastName = "Smith",
                            EmployeeName = "Jane",
                            PermissionDate = new DateTime(2024, 8, 10, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3841),
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            EmployeeLastName = "Johnson",
                            EmployeeName = "Alice",
                            PermissionDate = new DateTime(2024, 8, 11, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3843),
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            EmployeeLastName = "Brown",
                            EmployeeName = "Bob",
                            PermissionDate = new DateTime(2024, 8, 5, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3844),
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            EmployeeLastName = "Davis",
                            EmployeeName = "Charlie",
                            PermissionDate = new DateTime(2024, 7, 29, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3845),
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            EmployeeLastName = "Wilson",
                            EmployeeName = "Diana",
                            PermissionDate = new DateTime(2024, 8, 9, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3846),
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 7,
                            EmployeeLastName = "Taylor",
                            EmployeeName = "Edward",
                            PermissionDate = new DateTime(2024, 8, 2, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3848),
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            EmployeeLastName = "Thomas",
                            EmployeeName = "Fiona",
                            PermissionDate = new DateTime(2024, 8, 17, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3849),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            EmployeeLastName = "Anderson",
                            EmployeeName = "George",
                            PermissionDate = new DateTime(2024, 8, 14, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3850),
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            EmployeeLastName = "Martinez",
                            EmployeeName = "Hannah",
                            PermissionDate = new DateTime(2024, 8, 13, 16, 2, 55, 230, DateTimeKind.Local).AddTicks(3851),
                            PermissionTypeId = 3
                        });
                });

            modelBuilder.Entity("N5Challenge.Core.Entities.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vacaciones"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Permiso médico"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Día personal"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Licencia por estudios"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Licencia por paternidad/maternidad"
                        });
                });

            modelBuilder.Entity("N5Challenge.Core.Entities.Permission", b =>
                {
                    b.HasOne("N5Challenge.Core.Entities.PermissionType", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("N5Challenge.Core.Entities.PermissionType", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
